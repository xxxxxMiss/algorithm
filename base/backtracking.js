/* 
  ????????? 2-9 ???????????????????

???????????????????????? 1 ????????



??:

???"23"
???["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
??:
?????????????????????????????????

??????LeetCode?
???https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number
??????????????????????????????????
*/

function letterCombinations(digits) {
  const map = new Map()
  map.set('2', 'abc')
  map.set('3', 'def')
  map.set('4', 'ghi')
  map.set('5', 'jkl')
  map.set('6', 'mno')
  map.set('7', 'pqrs')
  map.set('8', 'tuv')
  map.set('9', 'wxyz')

  const result = []

  function backtrack(combination, nextDigits) {
    if (nextDigits.length === 0) {
      result.push(combination)
    } else {
      const dgt = nextDigits.substring(0, 1)
      const letters = map.get(dgt)
      for (let i = 0; i < letters.length; i++) {
        const letter = map.get(dgt).substring(i, i + 1)
        backtrack(combination + letter, nextDigits.substring(1))
      }
    }
  }

  backtrack('', digits)
  return result
}

console.log(letterCombinations('23'))
