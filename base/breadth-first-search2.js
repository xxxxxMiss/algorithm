let n = 9 // 行
let m = 9
let p = 5
let q = 7
// 0: 海洋
const a = [
  [1, 2, 1, 0, 0, 0, 0, 0, 2, 3],
  [3, 0, 2, 0, 1, 2, 1, 0, 1, 2],
  [4, 0, 1, 0, 1, 2, 3, 2, 0, 1],
  [3, 2, 0, 0, 0, 1, 2, 4, 0, 0],
  [0, 0, 0, 0, 0, 0, 1, 5, 3, 0],
  [0, 1, 2, 1, 0, 1, 5, 4, 3, 0],
  [0, 1, 2, 3, 1, 3, 6, 2, 1, 0],
  [0, 0, 3, 4, 8, 9, 7, 5, 0, 0],
  [0, 0, 0, 4, 8, 9, 7, 0, 1, 2],
  [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
]
const book = [
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]
function dfsCoordinate() {
  const queue = [[5, 7]]
  // 右，下，左，上
  const next = [[0, 1], [1, 0], [0, -1], [-1, 0]]
  let sum = 1

  while (queue.length) {
    let tx
    let ty
    for (let i = 0; i < next.length; i++) {
      tx = queue[0][0] + next[i][0]
      ty = queue[0][1] + next[i][1]

      if (tx === 0 || tx > n || ty === 0 || ty > m) {
        continue
      }
      if (a[tx][ty] !== 0 && book[tx][ty] === 0) {
        book[tx][ty] = 1
        queue.push([tx, ty])
        sum++
      }
    }
    queue.shift()
  }
  return sum
}

console.log(dfsCoordinate())
